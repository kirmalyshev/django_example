# Generated by Django 2.2.7 on 2020-03-15 23:23

import apps.profiles.constants
import apps.profiles.managers
import apps.profiles.models
from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import model_utils.fields
import re


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('created', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('username', models.CharField(help_text='Required. 30 characters or fewer. Letters, numbers and @/./+/-/_ characters', max_length=100, unique=True, validators=[django.core.validators.RegexValidator(re.compile('^[\\w.@+-]+$'), 'Enter a valid username.', 'invalid')], verbose_name='username')),
                ('name', models.CharField(blank=True, db_index=True, max_length=100, null=True, verbose_name='имя')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='дата начала регистрации')),
                ('last_visited', models.DateTimeField(blank=True, null=True, verbose_name='последнее посещение')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'verbose_name': 'пользователь',
                'verbose_name_plural': 'пользователи',
                'swappable': 'AUTH_USER_MODEL',
            },
            bases=(apps.profiles.models.ProfileTypeMixin, models.Model),
            managers=[
                ('objects', apps.profiles.managers.ClinicUserManager()),
            ],
        ),
        migrations.CreateModel(
            name='Contact',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('type', models.CharField(choices=[('phone', 'телефон'), ('email', 'e-mail')], db_index=True, max_length=10, verbose_name='тип')),
                ('value', models.CharField(db_index=True, max_length=512, verbose_name='значение')),
                ('is_primary', models.BooleanField(db_index=True, default=False, verbose_name='основной?')),
                ('is_confirmed', models.BooleanField(db_index=True, default=False, verbose_name='подтвержден?')),
                ('is_shown', models.BooleanField(db_index=True, default=False, verbose_name='показывать?')),
                ('is_rejected', models.BooleanField(db_index=True, default=False, verbose_name='отклонен?')),
                ('is_deleted', models.BooleanField(db_index=True, default=False, verbose_name='удален?')),
                ('is_stale', models.BooleanField(db_index=True, default=False, help_text='email удален, телефон не отвечает', verbose_name='не работает?')),
                ('contact_name', models.CharField(blank=True, max_length=255, verbose_name='контактное лицо')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='contacts', to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'контакт',
                'verbose_name_plural': 'контакты',
                'unique_together': {('user', 'type', 'value')},
            },
            bases=(models.Model, apps.profiles.constants.ContactType),
        ),
        migrations.CreateModel(
            name='Profile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('type', models.PositiveSmallIntegerField(choices=[(0, 'системный'), (1, 'доктор'), (2, 'персонал клиники'), (3, 'пациент')], db_index=True, default=3, verbose_name='тип')),
                ('full_name', models.CharField(blank=True, db_index=True, max_length=128, verbose_name='полное имя')),
                ('first_name', models.CharField(blank=True, max_length=128, verbose_name='имя')),
                ('last_name', models.CharField(blank=True, max_length=128, verbose_name='фамилия')),
                ('patronymic', models.CharField(blank=True, max_length=128, verbose_name='отчество')),
                ('is_active', models.BooleanField(db_index=True, default=True, verbose_name='активен')),
                ('birth_date', models.DateField(blank=True, db_index=True, null=True, verbose_name='дата рождения')),
                ('gender', models.CharField(blank=True, choices=[('no', 'не указан'), ('man', 'мужской'), ('woman', 'женский')], default='no', max_length=5, verbose_name='пол')),
                ('picture_draft', models.ImageField(blank=True, null=True, upload_to='profile_picture_original/', verbose_name='фото профиля')),
                ('region_as_text', models.CharField(blank=True, max_length=256, null=True, verbose_name='регион текстом')),
            ],
            options={
                'verbose_name': 'профиль',
                'verbose_name_plural': 'профили',
            },
            bases=(models.Model, apps.profiles.models.GenderMixin, apps.profiles.models.ProfileTypeMixin),
        ),
        migrations.CreateModel(
            name='UserToProfile',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('profile', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='profiles.Profile')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'verbose_name': 'связь профиля с пользователем',
                'verbose_name_plural': 'связи профилей с пользователями',
            },
        ),
        migrations.AddField(
            model_name='profile',
            name='users',
            field=models.ManyToManyField(through='profiles.UserToProfile', to=settings.AUTH_USER_MODEL, verbose_name='пользователи'),
        ),
        migrations.CreateModel(
            name='ContactVerification',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('code', models.CharField(db_index=True, max_length=32, verbose_name='код')),
                ('contact', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='verification', to='profiles.Contact')),
            ],
            options={
                'verbose_name': 'код подтверждения',
                'verbose_name_plural': 'коды подтверждения',
            },
        ),
    ]
