# Generated by Django 2.2.7 on 2020-03-18 07:13

import django.contrib.postgres.fields.jsonb
import django.core.serializers.json
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.db.models.manager
import django.utils.timezone
import model_utils.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('clinics', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Appointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='Дата/время начала')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='Дата/время конца')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Длительность')),
                ('integration_data', django.contrib.postgres.fields.jsonb.JSONField(blank=True, default=dict, encoder=django.core.serializers.json.DjangoJSONEncoder, verbose_name='Данные об интеграции')),
                ('status', models.PositiveSmallIntegerField(choices=[(0, 'спрятана'), (1, 'на модерации'), (2, 'отклонена'), (10, 'запланирована'), (20, 'отменен администратором'), (21, 'отменен пациентом'), (22, 'отменен доктором'), (30, 'пациент пришел'), (40, 'на приеме'), (50, 'приём окончен, требуется оплата'), (60, 'прием завершен')], db_index=True, null=True, verbose_name='статус')),
                ('reason_text', models.TextField(blank=True, null=True, verbose_name='жалоба пациента')),
                ('price', models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True, validators=[django.core.validators.MinValueValidator(0.0)], verbose_name='стоимость')),
                ('doctor', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='clinics.Doctor', verbose_name='врач')),
                ('patient', models.ForeignKey(on_delete=django.db.models.deletion.DO_NOTHING, to='clinics.Patient', verbose_name='пациент')),
                ('service', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='clinics.Service', verbose_name='услуга')),
                ('subsidiary', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='clinics.Subsidiary', verbose_name='филиал')),
            ],
            options={
                'verbose_name': 'Запись на приём',
                'verbose_name_plural': 'Записи на приём',
                'abstract': False,
                'unique_together': {('patient', 'doctor', 'service', 'subsidiary', 'start', 'end')},
            },
        ),
        migrations.CreateModel(
            name='TimeSlot',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('start', models.DateTimeField(blank=True, null=True, verbose_name='Дата/время начала')),
                ('end', models.DateTimeField(blank=True, null=True, verbose_name='Дата/время конца')),
                ('duration', models.DurationField(blank=True, null=True, verbose_name='Длительность')),
                ('is_available', models.BooleanField(default=True, verbose_name='доступна ли запись в этот слот')),
            ],
            options={
                'verbose_name': 'Талон',
                'verbose_name_plural': 'Талоны',
                'ordering': ('start', 'duration'),
            },
        ),
        migrations.CreateModel(
            name='TimeSlotToAppointment',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('request', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='appointments.Appointment')),
                ('time_slot', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, to='appointments.TimeSlot')),
            ],
            options={
                'verbose_name': 'связь Записи на прием с таймслотами',
                'verbose_name_plural': 'связи Записи на прием с таймслотами',
            },
        ),
        migrations.AddField(
            model_name='timeslot',
            name='appointments',
            field=models.ManyToManyField(blank=True, related_name='time_slots', through='appointments.TimeSlotToAppointment', to='appointments.Appointment', verbose_name='Записи на прием'),
        ),
        migrations.AddField(
            model_name='timeslot',
            name='doctor',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, to='clinics.Doctor', verbose_name='врач'),
        ),
        migrations.AddField(
            model_name='timeslot',
            name='subsidiary',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='clinics.Subsidiary', verbose_name='филиал'),
        ),
        migrations.CreateModel(
            name='AppointmentResult',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', model_utils.fields.AutoCreatedField(db_index=True, default=django.utils.timezone.now, editable=False, verbose_name='created')),
                ('modified', model_utils.fields.AutoLastModifiedField(default=django.utils.timezone.now, editable=False, verbose_name='modified')),
                ('complaints', models.TextField(blank=True, null=True, verbose_name='жалобы')),
                ('diagnosis', models.TextField(blank=True, null=True, verbose_name='диагноз')),
                ('recommendations', models.TextField(blank=True, null=True, verbose_name='рекомендации')),
                ('appointment', models.OneToOneField(on_delete=django.db.models.deletion.PROTECT, related_name='result', to='appointments.Appointment')),
            ],
            options={
                'verbose_name': 'результат приема',
                'verbose_name_plural': 'результаты приема',
            },
        ),
        migrations.CreateModel(
            name='AppointmentOnModeration',
            fields=[
            ],
            options={
                'verbose_name': 'Необработанная запись',
                'verbose_name_plural': ' Необработанные записи',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('appointments.appointment',),
        ),
        migrations.CreateModel(
            name='ArchivedAppointment',
            fields=[
            ],
            options={
                'verbose_name': 'Архивная запись',
                'verbose_name_plural': 'Архивные записи',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('appointments.appointment',),
        ),
        migrations.CreateModel(
            name='FutureTimeSlot',
            fields=[
            ],
            options={
                'verbose_name': 'Талон в будущем',
                'verbose_name_plural': 'Талоны в будущем',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('appointments.timeslot',),
            managers=[
                ('timeframed', django.db.models.manager.Manager()),
            ],
        ),
        migrations.CreateModel(
            name='PlannedAppointment',
            fields=[
            ],
            options={
                'verbose_name': 'Запланированная запись',
                'verbose_name_plural': 'Запланированные записи',
                'proxy': True,
                'indexes': [],
                'constraints': [],
            },
            bases=('appointments.appointment',),
        ),
    ]
